openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: https://cuentas-springboot.onrender.com
    description: Generated server url
paths:
  /api/users/{userId}:
    get:
      tags:
        - users-controller-adapter
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - users-controller-adapter
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - users-controller-adapter
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/users/{userId}/transactions/{transactionId}:
    get:
      tags:
        - transactions-controller-adapter
      operationId: getTransaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
    put:
      tags:
        - transactions-controller-adapter
      operationId: updateTransaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      tags:
        - transactions-controller-adapter
      operationId: deleteTransaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/users/{userId}/settings:
    get:
      tags:
        - users-controller-adapter
      operationId: getUserSettings
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserSettings'
    put:
      tags:
        - users-controller-adapter
      operationId: updateUserSettings
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserSettings'
  /api/users/{userId}/liabilities/{liabilityId}:
    get:
      tags:
        - liabilities-controller-adapter
      operationId: getLiability
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: liabilityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Liability'
    put:
      tags:
        - liabilities-controller-adapter
      operationId: updateLiability
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: liabilityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Liability'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Liability'
    delete:
      tags:
        - liabilities-controller-adapter
      operationId: deleteLiability
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: liabilityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/users/{userId}/categories/{categoryId}:
    get:
      tags:
        - categories-controller-adapter
      operationId: getCategory
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
    put:
      tags:
        - categories-controller-adapter
      operationId: updateCategory
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
    delete:
      tags:
        - categories-controller-adapter
      operationId: deleteCategory
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/users/{userId}/assets/{assetId}:
    get:
      tags:
        - assets-controller-adapter
      operationId: getAsset
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Asset'
    put:
      tags:
        - assets-controller-adapter
      operationId: updateAsset
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Asset'
    delete:
      tags:
        - assets-controller-adapter
      operationId: deleteAsset
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /mcp:
    post:
      tags:
        - mcp-controller-adapter
      operationId: handleRpc
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
  /api/users:
    get:
      tags:
        - users-controller-adapter
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - users-controller-adapter
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{userId}/transactions:
    get:
      tags:
        - transactions-controller-adapter
      operationId: listTransactions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: liabilityId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: assetId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: categoryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: relatedAssetId
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      tags:
        - transactions-controller-adapter
      operationId: createTransaction
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Transaction'
  /api/users/{userId}/liabilities:
    get:
      tags:
        - liabilities-controller-adapter
      operationId: listLiabilities
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Liability'
    post:
      tags:
        - liabilities-controller-adapter
      operationId: createLiability
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Liability'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Liability'
  /api/users/{userId}/excel/import:
    post:
      tags:
        - excel-controller-adapter
      operationId: importExcel
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/{userId}/excel/importNew:
    post:
      tags:
        - excel-controller-adapter
      operationId: importExcelNew
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/{userId}/categories:
    get:
      tags:
        - categories-controller-adapter
      operationId: listCategories
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags:
        - categories-controller-adapter
      operationId: createCategory
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Category'
  /api/users/{userId}/assets:
    get:
      tags:
        - assets-controller-adapter
      operationId: listAssets
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'
    post:
      tags:
        - assets-controller-adapter
      operationId: createAsset
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Asset'
  /api/users/{userId}/dashboard:
    get:
      tags:
        - dashboard-controller-adapter
      operationId: getDashboard
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardMetrics'
  /api/users/{userId}/dashboard/summary:
    get:
      tags:
        - dashboard-controller-adapter
      operationId: getPeriodSummary
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: period
          in: query
          required: false
          schema:
            type: string
            default: month
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeriodSummary'
  /api/users/{userId}/dashboard/summary/monthly:
    get:
      tags:
        - dashboard-controller-adapter
      operationId: getMonthlySummary
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PeriodSummary'
  /api/users/{userId}/dashboard/liabilities/{liabilityId}/progress:
    get:
      tags:
        - dashboard-controller-adapter
      operationId: getLiabilityProgress
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: liabilityId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LiabilityProgress'
  /api/users/{userId}/dashboard/assets/{assetId}/performance:
    get:
      tags:
        - dashboard-controller-adapter
      operationId: getAssetPerformance
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssetPerformance'
  /api/users/{userId}/assets/{assetId}/roi:
    get:
      tags:
        - assets-controller-adapter
      operationId: calculateAssetRoi
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssetROI'
  /api/users/{userId}/assets/{assetId}/roi/monthly:
    get:
      tags:
        - assets-controller-adapter
      operationId: getMonthlyRoi
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: year
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MonthlyROI'
components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        assetId:
          type: integer
          format: int64
        relatedAssetId:
          type: integer
          format: int64
        liabilityId:
          type: integer
          format: int64
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserSettings:
      type: object
      properties:
        settingId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        darkMode:
          type: boolean
        language:
          type: string
        notificationsEmail:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Liability:
      type: object
      properties:
        liabilityId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        liabilityTypeId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        principalAmount:
          type: number
          format: double
        interestRate:
          type: number
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        outstandingBalance:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Category:
      type: object
      properties:
        categoryId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Asset:
      type: object
      properties:
        assetId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        assetTypeId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        acquisitionDate:
          type: string
          format: date
        acquisitionValue:
          type: number
          format: double
        currentValue:
          type: number
          format: double
    DashboardMetrics:
      type: object
      properties:
        totalIncome:
          type: number
        totalExpenses:
          type: number
        netBalance:
          type: number
        bestAsset:
          $ref: '#/components/schemas/Asset'
        worstAsset:
          $ref: '#/components/schemas/Asset'
    PeriodSummary:
      type: object
      properties:
        period:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        totalIncome:
          type: number
        totalExpenses:
          type: number
        netProfit:
          type: number
    LiabilityProgress:
      type: object
      properties:
        liabilityId:
          type: integer
          format: int64
        principalPaid:
          type: number
        interestPaid:
          type: number
        remainingBalance:
          type: number
        progressPercentage:
          type: number
    AssetPerformance:
      type: object
      properties:
        assetId:
          type: integer
          format: int64
        initialValue:
          type: number
        currentValue:
          type: number
          format: double
        roi:
          type: number
    AssetROI:
      type: object
      properties:
        assetId:
          type: integer
          format: int64
        totalIncome:
          type: number
          format: double
        totalExpenses:
          type: number
          format: double
        netProfit:
          type: number
          format: double
        roiPercentage:
          type: number
          format: double
    MonthlyROI:
      type: object
      properties:
        month:
          type: string
        income:
          type: number
          format: double
        expenses:
          type: number
          format: double
        netProfit:
          type: number
          format: double
        roiPercentage:
          type: number
          format: double
