openapi: 3.0.1
info:
  title: Cuentas Backend API
  version: "1.0.0"
  description: API para gestión de usuarios, categorías, activos, pasivos y transacciones financieras.
servers:
  - url: http://localhost:8080/api/v1
    description: Servidor local
tags:
  - name: Users
    description: Gestión de usuarios
  - name: Categories
    description: Gestión de categorías de ingresos/gastos
  - name: Assets
    description: Gestión de activos
  - name: Liabilities
    description: Gestión de pasivos
  - name: Transactions
    description: Gestión de transacciones
  - name: Excel
    description: Importación de Excel

paths:

  # ===============================
  # USERS
  # ===============================
  /users:
    post:
      tags: [Users]
      summary: Crear un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: Usuario creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      tags: [Users]
      summary: Obtener un usuario por ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  # ===============================
  # CATEGORIES
  # ===============================
  /users/{userId}/categories:
    get:
      tags: [Categories]
      summary: Listar categorías de un usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

    post:
      tags: [Categories]
      summary: Crear categoría para usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, type]
              properties:
                name:
                  type: string
                type:
                  type: string
                  enum: [income, expense]
                description:
                  type: string
      responses:
        '201':
          description: Categoría creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

  /users/{userId}/categories/{categoryId}:
    put:
      tags: [Categories]
      summary: Actualizar categoría
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, type]
              properties:
                name:
                  type: string
                type:
                  type: string
                  enum: [income, expense]
                description:
                  type: string
      responses:
        '200':
          description: Categoría actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'

    delete:
      tags: [Categories]
      summary: Borrar categoría
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Categoría borrada

  # ===============================
  # ASSETS
  # ===============================
  /users/{userId}/assets:
    get:
      tags: [Assets]
      summary: Listar activos de un usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de activos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Asset'

    post:
      tags: [Assets]
      summary: Crear un activo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, assetTypeId, acquisitionValue, currentValue]
              properties:
                name:
                  type: string
                description:
                  type: string
                assetTypeId:
                  type: integer
                acquisitionValue:
                  type: number
                  format: double
                currentValue:
                  type: number
                  format: double
                acquisitionDate:
                  type: string
                  format: date
      responses:
        '201':
          description: Activo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'

  /users/{userId}/assets/{assetId}:
    put:
      tags: [Assets]
      summary: Actualizar activo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, assetTypeId, acquisitionValue, currentValue]
              properties:
                name:
                  type: string
                description:
                  type: string
                assetTypeId:
                  type: integer
                acquisitionValue:
                  type: number
                  format: double
                currentValue:
                  type: number
                  format: double
                acquisitionDate:
                  type: string
                  format: date
      responses:
        '200':
          description: Activo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'

    delete:
      tags: [Assets]
      summary: Borrar activo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: assetId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Activo borrado

  # ===============================
  # LIABILITIES
  # ===============================
  /users/{userId}/liabilities:
    get:
      tags: [Liabilities]
      summary: Listar pasivos de un usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de pasivos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Liability'

    post:
      tags: [Liabilities]
      summary: Crear un pasivo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, liabilityTypeId, principalAmount, outstandingBalance]
              properties:
                name:
                  type: string
                description:
                  type: string
                liabilityTypeId:
                  type: integer
                principalAmount:
                  type: number
                  format: double
                interestRate:
                  type: number
                  format: double
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                outstandingBalance:
                  type: number
                  format: double
      responses:
        '201':
          description: Pasivo creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liability'

  /users/{userId}/liabilities/{liabilityId}:
    put:
      tags: [Liabilities]
      summary: Actualizar pasivo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: liabilityId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, liabilityTypeId, principalAmount, outstandingBalance]
              properties:
                name:
                  type: string
                description:
                  type: string
                liabilityTypeId:
                  type: integer
                principalAmount:
                  type: number
                  format: double
                interestRate:
                  type: number
                  format: double
                startDate:
                  type: string
                  format: date
                endDate:
                  type: string
                  format: date
                outstandingBalance:
                  type: number
                  format: double
      responses:
        '200':
          description: Pasivo actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Liability'

    delete:
      tags: [Liabilities]
      summary: Borrar pasivo
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: liabilityId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Pasivo borrado

  # ===============================
  # TRANSACTIONS
  # ===============================
  /users/{userId}/transactions:
    get:
      tags: [Transactions]
      summary: Listar transacciones de un usuario
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lista de transacciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'

    post:
      tags: [Transactions]
      summary: Crear transacción
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, transactionDate]
              properties:
                categoryId:
                  type: integer
                assetId:
                  type: integer
                liabilityId:
                  type: integer
                amount:
                  type: number
                  format: double
                transactionDate:
                  type: string
                  format: date
                description:
                  type: string
      responses:
        '201':
          description: Transacción creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

  /users/{userId}/transactions/{transactionId}:
    put:
      tags: [Transactions]
      summary: Actualizar transacción
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [amount, transactionDate]
              properties:
                categoryId:
                  type: integer
                assetId:
                  type: integer
                liabilityId:
                  type: integer
                amount:
                  type: number
                  format: double
                transactionDate:
                  type: string
                  format: date
                description:
                  type: string
      responses:
        '200':
          description: Transacción actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'

    delete:
      tags: [Transactions]
      summary: Borrar transacción
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: transactionId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Transacción borrada

  # ===============================
  # EXCEL IMPORT
  # ===============================
  /users/{userId}/excel/import:
    post:
      tags: [Excel]
      summary: Subir y procesar un Excel
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: year
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Excel procesado correctamente

  /users/{userId}/excel/importNew:
    post:
      tags: [Excel]
      summary: Subir y procesar un Excel
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
        - name: year
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Excel procesado correctamente

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Category:
      type: object
      properties:
        categoryId:
          type: integer
        userId:
          type: integer
        name:
          type: string
        description:
          type: string
        type:
          type: string
          enum: [income, expense]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Asset:
      type: object
      properties:
        assetId:
          type: integer
        userId:
          type: integer
        assetTypeId:
          type: integer
        name:
          type: string
        description:
          type: string
        acquisitionDate:
          type: string
          format: date
        acquisitionValue:
          type: number
          format: double
        currentValue:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Liability:
      type: object
      properties:
        liabilityId:
          type: integer
        userId:
          type: integer
        liabilityTypeId:
          type: integer
        name:
          type: string
        description:
          type: string
        principalAmount:
          type: number
          format: double
        interestRate:
          type: number
          format: double
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        outstandingBalance:
          type: number
          format: double
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
        userId:
          type: integer
        categoryId:
          type: integer
        assetId:
          type: integer
        liabilityId:
          type: integer
        amount:
          type: number
          format: double
        transactionDate:
          type: string
          format: date
        description:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
